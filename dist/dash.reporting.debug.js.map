{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/metrics/MetricsReporting.js","webpack://dashjs/./src/streaming/metrics/MetricsReportingEvents.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsCollectionController.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsController.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsHandlersController.js","webpack://dashjs/./src/streaming/metrics/controllers/RangeController.js","webpack://dashjs/./src/streaming/metrics/controllers/ReportingController.js","webpack://dashjs/./src/streaming/metrics/metrics/MetricsHandlerFactory.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/BufferLevelHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/GenericMetricHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/HttpListHandler.js","webpack://dashjs/./src/streaming/metrics/reporting/ReportingFactory.js","webpack://dashjs/./src/streaming/metrics/reporting/reporters/DVBReporting.js","webpack://dashjs/./src/streaming/metrics/utils/DVBErrorsTranslator.js","webpack://dashjs/./src/streaming/metrics/utils/HandlerHelpers.js","webpack://dashjs/./src/streaming/metrics/utils/ManifestParsing.js","webpack://dashjs/./src/streaming/metrics/utils/MetricSerialiser.js","webpack://dashjs/./src/streaming/metrics/utils/RNG.js","webpack://dashjs/./src/streaming/metrics/vo/DVBErrors.js","webpack://dashjs/./src/streaming/metrics/vo/Metrics.js","webpack://dashjs/./src/streaming/metrics/vo/Range.js","webpack://dashjs/./src/streaming/metrics/vo/Reporting.js","webpack://dashjs/./src/streaming/utils/CustomTimeRanges.js","webpack://dashjs/./src/streaming/utils/SupervisorTools.js"],"names":["FactoryMaker","instance","singletonContexts","singletonFactories","classFactories","extend","name","childInstance","override","context","getSingletonInstance","className","i","obj","setSingletonInstance","push","deleteSingletonInstances","filter","x","getFactoryByName","factoriesArray","updateFactory","factory","updateClassFactory","getClassFactoryByName","getClassFactory","classConstructor","__dashjs_factory_name","undefined","create","merge","arguments","updateSingletonFactory","getSingletonFactoryByName","getSingletonFactory","getInstance","args","classInstance","extensionObject","extension","apply","parent","prop","hasOwnProperty","getClassName","EventsBase","events","config","publicOnly","evt","indexOf","Constants","init","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","CMCD_MODE_QUERY","CMCD_MODE_HEADER","LOCATION","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_LL_SCHEME","SUPPLEMENTAL_PROPERTY_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","constants","MetricsReporting","dvbErrorsTranslator","createMetricsReporting","DVBErrorsTranslator","eventBus","dashMetrics","metricsConstants","initialise","MetricsCollectionController","getReportingFactory","ReportingFactory","getMetricsHandlerFactory","MetricsHandlerFactory","dashjs","MetricsReportingEvents","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","CMCD_DATA_GENERATED","metricsReportingEvents","metricsControllers","update","e","error","controllersToRemove","Object","keys","metrics","ManifestParsing","adapter","getMetrics","manifest","forEach","m","key","JSON","stringify","controller","MetricsController","initialize","splice","c","reset","trigger","resetMetricsControllers","setup","on","MANIFEST_UPDATED","STREAM_TEARDOWN_COMPLETE","off","metricsHandlersController","reportingController","rangeController","metricsEntry","RangeController","mediaElement","Range","ReportingController","debug","Reporting","MetricsHandlersController","handlers","Events","metricsHandlerFactory","handle","handler","handleNewMetric","metric","value","mediaType","split","midx","ms","nextm","METRIC_ADDED","METRIC_UPDATED","useWallClockTime","ranges","rs","length","r","start","starttime","end","duration","add","_useWallClockTime","clear","CustomTimeRanges","isEnabled","numRanges","time","Date","getTime","currentTime","reporters","reportingFactory","reporting","some","reporter","report","type","vos","logger","getLogger","keyRegex","knownFactoryProducts","BufferLevel","DVBErrors","HttpList","PlayList","GenericMetricHandler","RepSwitchList","TcpList","listType","matches","match","message","register","unregister","BufferLevelHandler","n","interval","lastReportedTime","handlerHelpers","HandlerHelpers","storedVOs","getLowestBufferLevelVO","map","reduce","a","b","level","intervalCallback","vo","t","basename","rc","n_ms","validateN","reconstructFullMetricName","setInterval","clearInterval","BUFFER_LEVEL","DVBErrorsHandler","onInitialisationComplete","unused","DVB_ERRORS","metricName","HttpListHandler","storedVos","requestType","HTTP_REQUEST","knownReportingSchemeIdUris","DVBReporting","entry","schemeIdUri","moduleName","metricSerialiser","randomNumberGenerator","reportingPlayerStatusDecided","isReportingPlayer","reportingUrl","USE_DRAFT_DVB_SPEC","allowPendingRequestsToCompleteOnReset","pendingRequests","MetricSerialiser","RNG","resetInitialSettings","doGetRequest","url","successCB","failureCB","req","XMLHttpRequest","oncomplete","reqIndex","status","open","onloadend","onerror","send","Array","isArray","serialise","probability","dvb_reportingUrl","Error","dvb_probability","random","abort","mpd","o","mpdurl","originalUrl","terror","addDVBErrors","onManifestUpdate","onServiceLocationChanged","errorcode","BASE_URL_CHANGED","servicelocation","onBecameReporter","BECAME_REPORTER","handleHttpMetric","responsecode","CONNECTION_ERROR","tresponse","_serviceLocation","onMetricEvent","onPlaybackError","reason","code","MediaError","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","CORRUPT_MEDIA_OTHER","SERVICE_LOCATION_BLACKLIST_CHANGED","PLAYBACK_ERROR","mn","isNaN","getMetricsRangeStartTime","dynamic","range","voPeriods","reportingStartTime","presentationStartTime","getAvailabilityStartTime","getRegularPeriods","Metrics_asArray","metricEntry","Metrics","isDynamic","getIsDynamic","Range_asArray","rangeEntry","getDuration","Reporting_asArray","reportingEntry","pairs","v","isBuiltIn","prototype","toString","call","slice","encodeURIComponent","join","toISOString","Math","round","crypto","window","msCrypto","ArrayType","Uint32Array","MAX_VALUE","pow","BYTES_PER_ELEMENT","NUM_RANDOM_NUMBERS","randomNumbers","index","getRandomValues","rand","min","max","ipaddress","SSL_CONNECTION_FAILED_PREFIX","DNS_RESOLUTION_FAILED","HOST_UNREACHABLE","CONNECTION_REFUSED","CORRUPT_MEDIA_ISOBMFF","Infinity","DEFAULT_DVB_PROBABILITY","customTimeRangeArray","mergeRanges","remove","rangeIndex1","rangeIndex2","range1","range2","checkInteger","NaN","checkParameterType","parameter","isInt","checkRange","checkIsVideoOrAudioType"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAI,YAAY;AAE9B,MAAIC,QAAJ;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,aAAtB,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;AACpD,QAAI,CAACA,OAAO,CAACH,IAAD,CAAR,IAAkBC,aAAtB,EAAqC;AACjCE,aAAO,CAACH,IAAD,CAAP,GAAgB;AACZL,gBAAQ,EAAEM,aADE;AAEZC,gBAAQ,EAAEA;AAFE,OAAhB;AAIH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASE,oBAAT,CAA8BD,OAA9B,EAAuCE,SAAvC,EAAkD;AAC9C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J,SAAS,CAACgK,qBAAV,GAAyC,KAAzC;AACAhK,SAAS,CAACiK,gBAAV,GAAyC,KAAzC;AACAjK,SAAS,CAACkK,kBAAV,GAAyC,KAAzC;AACAlK,SAAS,CAACkG,gBAAV,GAAyC,KAAzC;AACAlG,SAAS,CAACmK,qBAAV,GAAyC,KAAzC;AACAnK,SAAS,CAAC4G,mBAAV,GAAyC,KAAzC;AACA5G,SAAS,CAAC4F,gBAAV,GAAyC,KAAzC;AACA5F,SAAS,CAAC+F,eAAV,GAAyC,KAAzC;AAEe/F,wEAAf,E;;;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACM2H,O,GACF,mBAAc;AAAA;;AAEV,OAAK5M,OAAL,GAAe,EAAf;AACA,OAAK6B,KAAL,GAAa,EAAb;AACA,OAAKG,SAAL,GAAiB,EAAjB;AACH,C;;AAGU4K,sEAAf,E;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACM/K,K,GACF,iBAAc;AAAA;;AAEV;AACA,OAAK0B,SAAL,GAAiB,CAAjB;AACA,OAAKE,QAAL,GAAgB4L,QAAhB,CAJU,CAMV;;AACA,OAAK1L,iBAAL,GAAyB,KAAzB;AACH,C;;AAGU9B,oEAAf,E;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA,IAAMyN,uBAAuB,GAAG,IAAhC;;IAEMtN,S,GACF,qB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","file":"dash.reporting.debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/streaming/metrics/MetricsReporting.js\");\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n * @ignore\r\n */\r\nconst FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let singletonContexts = [];\r\n    const singletonFactories = {};\r\n    const classFactories = {};\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        if (!context[name] && childInstance) {\r\n            context[name] = {\r\n                instance: childInstance,\r\n                override: override\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({\r\n            name: className,\r\n            context: context,\r\n            instance: instance\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this method to remove all singleton instances associated with a particular context.\r\n     *\r\n     * @param {Object} context\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function deleteSingletonInstances(context) {\r\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Factories storage Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function getFactoryByName(name, factoriesArray) {\r\n        return factoriesArray[name];\r\n    }\r\n\r\n    function updateFactory(name, factory, factoriesArray) {\r\n        if (name in factoriesArray) {\r\n            factoriesArray[name] = factory;\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Class Factories Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateClassFactory(name, factory) {\r\n        updateFactory(name, factory, classFactories);\r\n    }\r\n\r\n    function getClassFactoryByName(name) {\r\n        return getFactoryByName(name, classFactories);\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\r\n\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    create: function () {\r\n                        return merge(classConstructor, context, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n        return factory;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Singleton Factory MAangement\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateSingletonFactory(name, factory) {\r\n        updateFactory(name, factory, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactoryByName(name) {\r\n        return getFactoryByName(name, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                let instance;\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    getInstance: function () {\r\n                        // If we don't have an instance yet check for one on the context\r\n                        if (!instance) {\r\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                        }\r\n                        // If there's no instance on the context then create one\r\n                        if (!instance) {\r\n                            instance = merge(classConstructor, context, arguments);\r\n                            singletonContexts.push({\r\n                                name: classConstructor.__dashjs_factory_name,\r\n                                context: context,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                        return instance;\r\n                    }\r\n                };\r\n            };\r\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n\r\n        return factory;\r\n    }\r\n\r\n    function merge(classConstructor, context, args) {\r\n\r\n        let classInstance;\r\n        const className = classConstructor.__dashjs_factory_name;\r\n        const extensionObject = context[className];\r\n\r\n        if (extensionObject) {\r\n\r\n            let extension = extensionObject.instance;\r\n\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n\r\n                classInstance = classConstructor.apply({context}, args);\r\n                extension = extension.apply({\r\n                    context,\r\n                    factory: instance,\r\n                    parent: classInstance\r\n                }, args);\r\n\r\n                for (const prop in extension) {\r\n                    if (classInstance.hasOwnProperty(prop)) {\r\n                        classInstance[prop] = extension[prop];\r\n                    }\r\n                }\r\n\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n\r\n                return extension.apply({\r\n                    context,\r\n                    factory: instance\r\n                }, args);\r\n\r\n            }\r\n        } else {\r\n            // Create new instance of the class\r\n            classInstance = classConstructor.apply({context}, args);\r\n        }\r\n\r\n        // Add getClassName function to class instance prototype (used by Debug)\r\n        classInstance.getClassName = function () {return className;};\r\n\r\n        return classInstance;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        deleteSingletonInstances: deleteSingletonInstances,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getSingletonFactoryByName: getSingletonFactoryByName,\r\n        updateSingletonFactory: updateSingletonFactory,\r\n        getClassFactory: getClassFactory,\r\n        getClassFactoryByName: getClassFactoryByName,\r\n        updateClassFactory: updateClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Constants declaration\r\n * @class\r\n * @ignore\r\n * @hideconstructor\r\n */\r\nclass Constants {\r\n\r\n    init() {\r\n        /**\r\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STREAM = 'stream';\r\n\r\n        /**\r\n         *  @constant {string} VIDEO Video media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VIDEO = 'video';\r\n\r\n        /**\r\n         *  @constant {string} AUDIO Audio media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.AUDIO = 'audio';\r\n\r\n        /**\r\n         *  @constant {string} TEXT Text media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TEXT = 'text';\r\n\r\n        /**\r\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MUXED = 'muxed';\r\n\r\n        /**\r\n         *  @constant {string} IMAGE Image media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.IMAGE = 'image';\r\n\r\n        /**\r\n         *  @constant {string} STPP STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STPP = 'stpp';\r\n\r\n        /**\r\n         *  @constant {string} TTML STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TTML = 'ttml';\r\n\r\n        /**\r\n         *  @constant {string} VTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VTT = 'vtt';\r\n\r\n        /**\r\n         *  @constant {string} WVTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.WVTT = 'wvtt';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_BOLA = 'abrBola';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_L2A = 'abrL2A';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\r\n\r\n        /**\r\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\r\n        *  @memberof Constants#\r\n        *  @static\r\n        */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\r\n\r\n        /**\r\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\r\n\r\n        /**\r\n         *  @constant {string} EWMA Exponential moving average\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_EWMA = 'ewma';\r\n\r\n        /**\r\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\r\n\r\n        /**\r\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_QUERY = 'query';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_HEADER = 'header';\r\n\r\n\r\n        this.LOCATION = 'Location';\r\n        this.INITIALIZE = 'initialize';\r\n        this.TEXT_SHOWING = 'showing';\r\n        this.TEXT_HIDDEN = 'hidden';\r\n        this.CC1 = 'CC1';\r\n        this.CC3 = 'CC3';\r\n        this.UTF8 = 'utf-8';\r\n        this.SCHEME_ID_URI = 'schemeIdUri';\r\n        this.START_TIME = 'starttime';\r\n        this.SERVICE_DESCRIPTION_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\r\n        this.SUPPLEMENTAL_PROPERTY_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\r\n        this.XML = 'XML';\r\n        this.ARRAY_BUFFER = 'ArrayBuffer';\r\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\r\n        this.DVB_PROBABILITY = 'dvb:probability';\r\n        this.VIDEO_ELEMENT_READY_STATES = {\r\n            HAVE_NOTHING: 0,\r\n            HAVE_METADATA: 1,\r\n            HAVE_CURRENT_DATA: 2,\r\n            HAVE_FUTURE_DATA: 3,\r\n            HAVE_ENOUGH_DATA: 4\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nconst constants = new Constants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DVBErrorsTranslator from './utils/DVBErrorsTranslator';\r\nimport MetricsReportingEvents from './MetricsReportingEvents';\r\nimport MetricsCollectionController from './controllers/MetricsCollectionController';\r\nimport MetricsHandlerFactory from './metrics/MetricsHandlerFactory';\r\nimport ReportingFactory from './reporting/ReportingFactory';\r\n\r\nfunction MetricsReporting() {\r\n\r\n    let context = this.context;\r\n    let instance,\r\n        dvbErrorsTranslator;\r\n\r\n    /**\r\n     * Create a MetricsCollectionController, and a DVBErrorsTranslator\r\n     * @param {Object} config - dependancies from owner\r\n     * @return {MetricsCollectionController} Metrics Collection Controller\r\n     */\r\n    function createMetricsReporting(config) {\r\n        dvbErrorsTranslator = DVBErrorsTranslator(context).getInstance({\r\n            eventBus: config.eventBus,\r\n            dashMetrics: config.dashMetrics,\r\n            metricsConstants: config.metricsConstants,\r\n            events: config.events\r\n        });\r\n        dvbErrorsTranslator.initialise();\r\n        return MetricsCollectionController(context).create(config);\r\n    }\r\n\r\n    /**\r\n     * Get the ReportingFactory to allow new reporters to be registered\r\n     * @return {ReportingFactory} Reporting Factory\r\n     */\r\n    function getReportingFactory() {\r\n        return ReportingFactory(context).getInstance();\r\n    }\r\n\r\n    /**\r\n     * Get the MetricsHandlerFactory to allow new handlers to be registered\r\n     * @return {MetricsHandlerFactory} Metrics Handler Factory\r\n     */\r\n    function getMetricsHandlerFactory() {\r\n        return MetricsHandlerFactory(context).getInstance();\r\n    }\r\n\r\n    instance = {\r\n        createMetricsReporting:     createMetricsReporting,\r\n        getReportingFactory:        getReportingFactory,\r\n        getMetricsHandlerFactory:   getMetricsHandlerFactory\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsReporting.__dashjs_factory_name = 'MetricsReporting';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(MetricsReporting); /* jshint ignore:line */\r\nfactory.events = MetricsReportingEvents;\r\ndashjs.FactoryMaker.updateClassFactory(MetricsReporting.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n\r\n/**\r\n * @class\r\n * @implements EventsBase\r\n */\r\nclass MetricsReportingEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n\r\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\r\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\r\n\r\n        /**\r\n         * Triggered when CMCD data was generated for a HTTP request\r\n         * @event MetricsReportingEvents#CMCD_DATA_GENERATED\r\n         */\r\n        this.CMCD_DATA_GENERATED = 'cmcdDataGenerated';\r\n    }\r\n}\r\n\r\nlet metricsReportingEvents = new MetricsReportingEvents();\r\nexport default metricsReportingEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricsController from './MetricsController';\r\nimport ManifestParsing from '../utils/ManifestParsing';\r\nimport MetricsReportingEvents from '../MetricsReportingEvents';\r\n\r\nfunction MetricsCollectionController(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let metricsControllers = {};\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;\r\n    const events = config.events;\r\n\r\n    function update(e) {\r\n        if (e.error) {\r\n            return;\r\n        }\r\n\r\n        // start by assuming all existing controllers need removing\r\n        let controllersToRemove = Object.keys(metricsControllers);\r\n\r\n        const metrics = ManifestParsing(context).getInstance({\r\n            adapter: config.adapter,\r\n            constants: config.constants\r\n        }).getMetrics(e.manifest);\r\n\r\n        metrics.forEach(m => {\r\n            const key = JSON.stringify(m);\r\n\r\n            if (!metricsControllers.hasOwnProperty(key)) {\r\n                try {\r\n                    let controller = MetricsController(context).create(config);\r\n                    controller.initialize(m);\r\n                    metricsControllers[key] = controller;\r\n                } catch (e) {\r\n                    // fail quietly\r\n                }\r\n            } else {\r\n                // we still need this controller - delete from removal list\r\n                controllersToRemove.splice(key, 1);\r\n            }\r\n        });\r\n\r\n        // now remove the unwanted controllers\r\n        controllersToRemove.forEach(c => {\r\n            metricsControllers[c].reset();\r\n            delete metricsControllers[c];\r\n        });\r\n\r\n        eventBus.trigger(MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE);\r\n    }\r\n\r\n    function resetMetricsControllers() {\r\n        Object.keys(metricsControllers).forEach(key => {\r\n            metricsControllers[key].reset();\r\n        });\r\n\r\n        metricsControllers = {};\r\n    }\r\n\r\n    function setup() {\r\n        eventBus.on(events.MANIFEST_UPDATED, update, instance);\r\n        eventBus.on(events.STREAM_TEARDOWN_COMPLETE, resetMetricsControllers, instance);\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(events.MANIFEST_UPDATED, update, instance);\r\n        eventBus.off(events.STREAM_TEARDOWN_COMPLETE, resetMetricsControllers, instance);\r\n    }\r\n\r\n    instance = {\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nMetricsCollectionController.__dashjs_factory_name = 'MetricsCollectionController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MetricsCollectionController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport RangeController from './RangeController';\r\nimport ReportingController from './ReportingController';\r\nimport MetricsHandlersController from './MetricsHandlersController';\r\n\r\nfunction MetricsController(config) {\r\n\r\n    config = config || {};\r\n    let metricsHandlersController,\r\n        reportingController,\r\n        rangeController,\r\n        instance;\r\n\r\n    let context = this.context;\r\n\r\n    function initialize(metricsEntry) {\r\n        try {\r\n            rangeController = RangeController(context).create({\r\n                mediaElement: config.mediaElement\r\n            });\r\n\r\n            rangeController.initialize(metricsEntry.Range);\r\n\r\n            reportingController = ReportingController(context).create({\r\n                debug: config.debug,\r\n                metricsConstants: config.metricsConstants\r\n            });\r\n\r\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\r\n\r\n            metricsHandlersController = MetricsHandlersController(context).create({\r\n                debug: config.debug,\r\n                eventBus: config.eventBus,\r\n                metricsConstants: config.metricsConstants,\r\n                events: config.events\r\n            });\r\n\r\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\r\n        } catch (e) {\r\n            reset();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (metricsHandlersController) {\r\n            metricsHandlersController.reset();\r\n        }\r\n\r\n        if (reportingController) {\r\n            reportingController.reset();\r\n        }\r\n\r\n        if (rangeController) {\r\n            rangeController.reset();\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsController.__dashjs_factory_name = 'MetricsController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MetricsController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricsHandlerFactory from '../metrics/MetricsHandlerFactory';\r\n\r\nfunction MetricsHandlersController(config) {\r\n\r\n    config = config || {};\r\n    let handlers = [];\r\n\r\n    let instance;\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const Events = config.events;\r\n\r\n    let metricsHandlerFactory = MetricsHandlerFactory(context).getInstance({\r\n        debug: config.debug,\r\n        eventBus: config.eventBus,\r\n        metricsConstants: config.metricsConstants\r\n    });\r\n\r\n    function handle(e) {\r\n        handlers.forEach(handler => {\r\n            handler.handleNewMetric(e.metric, e.value, e.mediaType);\r\n        });\r\n    }\r\n\r\n    function initialize(metrics, reportingController) {\r\n        metrics.split(',').forEach(\r\n            (m, midx, ms) => {\r\n                let handler;\r\n\r\n                // there is a bug in ISO23009-1 where the metrics attribute\r\n                // is a comma-separated list but HttpList key can contain a\r\n                // comma enclosed by ().\r\n                if ((m.indexOf('(') !== -1) && m.indexOf(')') === -1) {\r\n                    let nextm = ms[midx + 1];\r\n\r\n                    if (nextm &&\r\n                            (nextm.indexOf('(') === -1) &&\r\n                            (nextm.indexOf(')') !== -1)) {\r\n                        m += ',' + nextm;\r\n\r\n                        // delete the next metric so forEach does not visit.\r\n                        delete ms[midx + 1];\r\n                    }\r\n                }\r\n\r\n                handler = metricsHandlerFactory.create(\r\n                    m,\r\n                    reportingController\r\n                );\r\n\r\n                if (handler) {\r\n                    handlers.push(handler);\r\n                }\r\n            }\r\n        );\r\n\r\n        eventBus.on(\r\n            Events.METRIC_ADDED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        eventBus.on(\r\n            Events.METRIC_UPDATED,\r\n            handle,\r\n            instance\r\n        );\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(\r\n            Events.METRIC_ADDED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        eventBus.off(\r\n            Events.METRIC_UPDATED,\r\n            handle,\r\n            instance\r\n        );\r\n\r\n        handlers.forEach(handler => handler.reset());\r\n\r\n        handlers = [];\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsHandlersController.__dashjs_factory_name = 'MetricsHandlersController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MetricsHandlersController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CustomTimeRanges from '../../utils/CustomTimeRanges';\r\n\r\nfunction RangeController(config) {\r\n\r\n    config = config || {};\r\n    let useWallClockTime = false;\r\n    let context = this.context;\r\n    let instance,\r\n        ranges;\r\n\r\n    let mediaElement = config.mediaElement;\r\n\r\n    function initialize(rs) {\r\n        if (rs && rs.length) {\r\n            rs.forEach(r => {\r\n                let start = r.starttime;\r\n                let end = start + r.duration;\r\n\r\n                ranges.add(start, end);\r\n            });\r\n\r\n            useWallClockTime = !!rs[0]._useWallClockTime;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        ranges.clear();\r\n    }\r\n\r\n    function setup() {\r\n        ranges = CustomTimeRanges(context).create();\r\n    }\r\n\r\n    function isEnabled() {\r\n        let numRanges = ranges.length;\r\n        let time;\r\n\r\n        if (!numRanges) {\r\n            return true;\r\n        }\r\n\r\n        // When not present, DASH Metrics reporting is requested\r\n        // for the whole duration of the content.\r\n        time = useWallClockTime ?\r\n                (new Date().getTime() / 1000) :\r\n                mediaElement.currentTime;\r\n\r\n        for (let i = 0; i < numRanges; i += 1) {\r\n            let start = ranges.start(i);\r\n            let end = ranges.end(i);\r\n\r\n            if ((start <= time) && (time < end)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        isEnabled:  isEnabled\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nRangeController.__dashjs_factory_name = 'RangeController';\r\nexport default dashjs.FactoryMaker.getClassFactory(RangeController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport ReportingFactory from '../reporting/ReportingFactory';\r\n\r\nfunction ReportingController(config) {\r\n\r\n    let reporters = [];\r\n    let instance;\r\n\r\n    const reportingFactory = ReportingFactory(this.context).getInstance(config);\r\n\r\n    function initialize(reporting, rangeController) {\r\n        // \"if multiple Reporting elements are present, it is expected that\r\n        // the client processes one of the recognized reporting schemes.\"\r\n        // to ignore this, and support multiple Reporting per Metric,\r\n        // simply change the 'some' below to 'forEach'\r\n        reporting.some(r => {\r\n            let reporter = reportingFactory.create(r, rangeController);\r\n\r\n            if (reporter) {\r\n                reporters.push(reporter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function reset() {\r\n        reporters.forEach(r => r.reset());\r\n        reporters = [];\r\n    }\r\n\r\n    function report(type, vos) {\r\n        reporters.forEach(r => r.report(type, vos));\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        reset:      reset,\r\n        report:     report\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nReportingController.__dashjs_factory_name = 'ReportingController';\r\nexport default dashjs.FactoryMaker.getClassFactory(ReportingController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport BufferLevel from './handlers/BufferLevelHandler';\r\nimport DVBErrors from './handlers/DVBErrorsHandler';\r\nimport HttpList from './handlers/HttpListHandler';\r\nimport GenericMetricHandler from './handlers/GenericMetricHandler';\r\n\r\nfunction MetricsHandlerFactory(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const logger = config.debug ? config.debug.getLogger(instance) : {};\r\n\r\n    // group 1: key, [group 3: n [, group 5: type]]\r\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\r\n\r\n    const context = this.context;\r\n    let knownFactoryProducts = {\r\n        BufferLevel:    BufferLevel,\r\n        DVBErrors:      DVBErrors,\r\n        HttpList:       HttpList,\r\n        PlayList:       GenericMetricHandler,\r\n        RepSwitchList:  GenericMetricHandler,\r\n        TcpList:        GenericMetricHandler\r\n    };\r\n\r\n    function create(listType, reportingController) {\r\n        var matches = listType.match(keyRegex);\r\n        var handler;\r\n\r\n        if (!matches) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            handler = knownFactoryProducts[matches[1]](context).create({\r\n                eventBus: config.eventBus,\r\n                metricsConstants: config.metricsConstants\r\n            });\r\n\r\n            handler.initialize(\r\n                matches[1],\r\n                reportingController,\r\n                matches[3],\r\n                matches[5]\r\n            );\r\n        } catch (e) {\r\n            handler = null;\r\n            logger.error(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\r\n        }\r\n\r\n        return handler;\r\n    }\r\n\r\n    function register(key, handler) {\r\n        knownFactoryProducts[key] = handler;\r\n    }\r\n\r\n    function unregister(key) {\r\n        delete knownFactoryProducts[key];\r\n    }\r\n\r\n    instance = {\r\n        create:     create,\r\n        register:   register,\r\n        unregister: unregister\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricsHandlerFactory); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport HandlerHelpers from '../../utils/HandlerHelpers';\r\n\r\nfunction BufferLevelHandler(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        reportingController,\r\n        n,\r\n        name,\r\n        interval,\r\n        lastReportedTime;\r\n\r\n    let context = this.context;\r\n    let handlerHelpers = HandlerHelpers(context).getInstance();\r\n\r\n    let storedVOs = [];\r\n\r\n    const metricsConstants = config.metricsConstants;\r\n\r\n    function getLowestBufferLevelVO() {\r\n        try {\r\n            return Object.keys(storedVOs).map(\r\n                key => storedVOs[key]\r\n            ).reduce(\r\n                (a, b) => {\r\n                    return (a.level < b.level) ? a : b;\r\n                }\r\n            );\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    function intervalCallback() {\r\n        let vo = getLowestBufferLevelVO();\r\n\r\n        if (vo) {\r\n            if (lastReportedTime !== vo.t) {\r\n                lastReportedTime = vo.t;\r\n                reportingController.report(name, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    function initialize(basename, rc, n_ms) {\r\n        if (rc) {\r\n            // this will throw if n is invalid, to be\r\n            // caught by the initialize caller.\r\n            n = handlerHelpers.validateN(n_ms);\r\n            reportingController = rc;\r\n            name = handlerHelpers.reconstructFullMetricName(basename, n_ms);\r\n            interval = setInterval(intervalCallback, n);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        clearInterval(interval);\r\n        interval = null;\r\n        n = 0;\r\n        reportingController = null;\r\n        lastReportedTime = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo, type) {\r\n        if (metric === metricsConstants.BUFFER_LEVEL) {\r\n            storedVOs[type] = vo;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nBufferLevelHandler.__dashjs_factory_name = 'BufferLevelHandler';\r\nexport default dashjs.FactoryMaker.getClassFactory(BufferLevelHandler); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricsReportingEvents from '../../MetricsReportingEvents';\r\n\r\nfunction DVBErrorsHandler(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        reportingController;\r\n\r\n    let eventBus = config.eventBus;\r\n    const metricsConstants = config.metricsConstants;\r\n\r\n    function onInitialisationComplete() {\r\n        // we only want to report this once per call to initialize\r\n        eventBus.off(\r\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\r\n            onInitialisationComplete,\r\n            this\r\n        );\r\n\r\n        // Note: A Player becoming a reporting Player is itself\r\n        // something which is recorded by the DVBErrors metric.\r\n        eventBus.trigger(MetricsReportingEvents.BECAME_REPORTING_PLAYER);\r\n    }\r\n\r\n    function initialize(unused, rc) {\r\n        if (rc) {\r\n            reportingController = rc;\r\n\r\n            eventBus.on(\r\n                MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\r\n                onInitialisationComplete,\r\n                this\r\n            );\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        reportingController = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        // simply pass metric straight through\r\n        if (metric === metricsConstants.DVB_ERRORS) {\r\n            if (reportingController) {\r\n                reportingController.report(metric, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nexport default dashjs.FactoryMaker.getClassFactory(DVBErrorsHandler); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n /**\r\n  * @ignore\r\n  */\r\nfunction GenericMetricHandler() {\r\n\r\n    let instance,\r\n        metricName,\r\n        reportingController;\r\n\r\n    function initialize(name, rc) {\r\n        metricName = name;\r\n        reportingController = rc;\r\n    }\r\n\r\n    function reset() {\r\n        reportingController = null;\r\n        metricName = undefined;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        // simply pass metric straight through\r\n        if (metric === metricName) {\r\n            if (reportingController) {\r\n                reportingController.report(metricName, vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\r\nexport default dashjs.FactoryMaker.getClassFactory(GenericMetricHandler); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport HandlerHelpers from '../../utils/HandlerHelpers';\r\n\r\nfunction HttpListHandler(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        reportingController,\r\n        n,\r\n        type,\r\n        name,\r\n        interval;\r\n\r\n    let storedVos = [];\r\n\r\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\r\n\r\n    const metricsConstants = config.metricsConstants;\r\n\r\n    function intervalCallback() {\r\n        var vos = storedVos;\r\n\r\n        if (vos.length) {\r\n            if (reportingController) {\r\n                reportingController.report(name, vos);\r\n            }\r\n        }\r\n\r\n        storedVos = [];\r\n    }\r\n\r\n    function initialize(basename, rc, n_ms, requestType) {\r\n        if (rc) {\r\n\r\n            // this will throw if n is invalid, to be\r\n            // caught by the initialize caller.\r\n            n = handlerHelpers.validateN(n_ms);\r\n\r\n            reportingController = rc;\r\n\r\n            if (requestType && requestType.length) {\r\n                type = requestType;\r\n            }\r\n\r\n            name = handlerHelpers.reconstructFullMetricName(\r\n                basename,\r\n                n_ms,\r\n                requestType\r\n            );\r\n\r\n            interval = setInterval(intervalCallback, n);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        clearInterval(interval);\r\n        interval = null;\r\n        n = null;\r\n        type = null;\r\n        storedVos = [];\r\n        reportingController = null;\r\n    }\r\n\r\n    function handleNewMetric(metric, vo) {\r\n        if (metric === metricsConstants.HTTP_REQUEST) {\r\n            if (!type || (type === vo.type)) {\r\n                storedVos.push(vo);\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize:         initialize,\r\n        reset:              reset,\r\n        handleNewMetric:    handleNewMetric\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\r\nexport default dashjs.FactoryMaker.getClassFactory(HttpListHandler); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DVBReporting from './reporters/DVBReporting';\r\n\r\nfunction ReportingFactory(config) {\r\n    config = config || {};\r\n\r\n    const knownReportingSchemeIdUris = {\r\n        'urn:dvb:dash:reporting:2014': DVBReporting\r\n    };\r\n\r\n    const context = this.context;\r\n    let instance;\r\n    const logger = config.debug ? config.debug.getLogger(instance) : {};\r\n    const metricsConstants = config.metricsConstants;\r\n\r\n    function create(entry, rangeController) {\r\n        let reporting;\r\n\r\n        try {\r\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create({\r\n                metricsConstants: metricsConstants\r\n            });\r\n\r\n            reporting.initialize(entry, rangeController);\r\n        } catch (e) {\r\n            reporting = null;\r\n            logger.error(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\r\n        }\r\n\r\n        return reporting;\r\n    }\r\n\r\n    function register(schemeIdUri, moduleName) {\r\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\r\n    }\r\n\r\n    function unregister(schemeIdUri) {\r\n        delete knownReportingSchemeIdUris[schemeIdUri];\r\n    }\r\n\r\n    instance = {\r\n        create:     create,\r\n        register:   register,\r\n        unregister: unregister\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ReportingFactory); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MetricSerialiser from '../../utils/MetricSerialiser';\r\nimport RNG from '../../utils/RNG';\r\n\r\nfunction DVBReporting(config) {\r\n    config = config || {};\r\n    let instance;\r\n\r\n    let context = this.context;\r\n    let metricSerialiser,\r\n        randomNumberGenerator,\r\n        reportingPlayerStatusDecided,\r\n        isReportingPlayer,\r\n        reportingUrl,\r\n        rangeController;\r\n\r\n    let USE_DRAFT_DVB_SPEC = true;\r\n    let allowPendingRequestsToCompleteOnReset = true;\r\n    let pendingRequests = [];\r\n\r\n    const metricsConstants = config.metricsConstants;\r\n\r\n    function setup() {\r\n        metricSerialiser = MetricSerialiser(context).getInstance();\r\n        randomNumberGenerator = RNG(context).getInstance();\r\n\r\n        resetInitialSettings();\r\n    }\r\n\r\n    function doGetRequest(url, successCB, failureCB) {\r\n        let req = new XMLHttpRequest();\r\n        const oncomplete = function () {\r\n            let reqIndex = pendingRequests.indexOf(req);\r\n\r\n            if (reqIndex === -1) {\r\n                return;\r\n            } else {\r\n                pendingRequests.splice(reqIndex, 1);\r\n            }\r\n\r\n            if ((req.status >= 200) && (req.status < 300)) {\r\n                if (successCB) {\r\n                    successCB();\r\n                }\r\n            } else {\r\n                if (failureCB) {\r\n                    failureCB();\r\n                }\r\n            }\r\n        };\r\n\r\n        pendingRequests.push(req);\r\n\r\n        try {\r\n            req.open('GET', url);\r\n            req.onloadend = oncomplete;\r\n            req.onerror = oncomplete;\r\n            req.send();\r\n        } catch (e) {\r\n            req.onerror();\r\n        }\r\n    }\r\n\r\n    function report(type, vos) {\r\n        if (!Array.isArray(vos)) {\r\n            vos = [vos];\r\n        }\r\n\r\n        // If the Player is not a reporting Player, then the Player shall\r\n        // not report any errors.\r\n        // ... In addition to any time restrictions specified by a Range\r\n        // element within the Metrics element.\r\n        if (isReportingPlayer && rangeController.isEnabled()) {\r\n\r\n            // This reporting mechanism operates by creating one HTTP GET\r\n            // request for every entry in the top level list of the metric.\r\n            vos.forEach(function (vo) {\r\n                let url = metricSerialiser.serialise(vo);\r\n\r\n                // this has been proposed for errata\r\n                if (USE_DRAFT_DVB_SPEC && (type !== metricsConstants.DVB_ERRORS)) {\r\n                    url = `metricname=${type}&${url}`;\r\n                }\r\n\r\n                // Take the value of the @reportingUrl attribute, append a\r\n                // question mark ('?') character and then append the string\r\n                // created in the previous step.\r\n                url = `${reportingUrl}?${url}`;\r\n\r\n                // Make an HTTP GET request to the URL contained within the\r\n                // string created in the previous step.\r\n                doGetRequest(url, null, function () {\r\n                    // If the Player is unable to make the report, for\r\n                    // example because the @reportingUrl is invalid, the\r\n                    // host cannot be reached, or an HTTP status code other\r\n                    // than one in the 200 series is received, the Player\r\n                    // shall cease being a reporting Player for the\r\n                    // duration of the MPD.\r\n                    isReportingPlayer = false;\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function initialize(entry, rc) {\r\n        let probability;\r\n\r\n        rangeController = rc;\r\n\r\n        reportingUrl = entry.dvb_reportingUrl;\r\n\r\n        // If a required attribute is missing, the Reporting descriptor may\r\n        // be ignored by the Player\r\n        if (!reportingUrl) {\r\n            throw new Error(\r\n                'required parameter missing (dvb:reportingUrl)'\r\n            );\r\n        }\r\n\r\n        // A Player's status, as a reporting Player or not, shall remain\r\n        // static for the duration of the MPD, regardless of MPD updates.\r\n        // (i.e. only calling reset (or failure) changes this state)\r\n        if (!reportingPlayerStatusDecided) {\r\n            probability = entry.dvb_probability;\r\n            // TS 103 285 Clause 10.12.3.4\r\n            // If the @probability attribute is set to 1000, it shall be a reporting Player.\r\n            // If the @probability attribute is absent it will take the default value of 1000.\r\n            // For any other value of the @probability attribute, it shall decide at random whether to be a\r\n            // reporting Player, such that the probability of being one is @probability/1000.\r\n            if (probability && (probability === 1000 || ((probability / 1000) >= randomNumberGenerator.random()))) {\r\n                isReportingPlayer = true;\r\n            }\r\n\r\n            reportingPlayerStatusDecided = true;\r\n        }\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        reportingPlayerStatusDecided = false;\r\n        isReportingPlayer = false;\r\n        reportingUrl = null;\r\n        rangeController = null;\r\n    }\r\n\r\n    function reset() {\r\n        if (!allowPendingRequestsToCompleteOnReset) {\r\n            pendingRequests.forEach(req => req.abort());\r\n            pendingRequests = [];\r\n        }\r\n\r\n        resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        report:     report,\r\n        initialize: initialize,\r\n        reset:      reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDVBReporting.__dashjs_factory_name = 'DVBReporting';\r\nexport default dashjs.FactoryMaker.getClassFactory(DVBReporting); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DVBErrors from '../vo/DVBErrors';\r\nimport MetricsReportingEvents from '../MetricsReportingEvents';\r\n\r\nfunction DVBErrorsTranslator(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        mpd;\r\n    const eventBus = config.eventBus;\r\n    const dashMetrics = config.dashMetrics;\r\n    const metricsConstants = config.metricsConstants;\r\n    //MediaPlayerEvents have been added to Events in MediaPlayer class\r\n    const Events = config.events;\r\n\r\n    function report(vo) {\r\n        let o = new DVBErrors();\r\n\r\n        if (!mpd) {\r\n            return;\r\n        }\r\n\r\n        for (const key in vo) {\r\n            if (vo.hasOwnProperty(key)) {\r\n                o[key] = vo[key];\r\n            }\r\n        }\r\n\r\n        if (!o.mpdurl) {\r\n            o.mpdurl = mpd.originalUrl || mpd.url;\r\n        }\r\n\r\n        if (!o.terror) {\r\n            o.terror = new Date();\r\n        }\r\n\r\n        dashMetrics.addDVBErrors(o);\r\n    }\r\n\r\n    function onManifestUpdate(e) {\r\n        if (e.error) {\r\n            return;\r\n        }\r\n\r\n        mpd = e.manifest;\r\n    }\r\n\r\n    function onServiceLocationChanged(e) {\r\n        report({\r\n            errorcode:          DVBErrors.BASE_URL_CHANGED,\r\n            servicelocation:    e.entry\r\n        });\r\n    }\r\n\r\n    function onBecameReporter() {\r\n        report({\r\n            errorcode: DVBErrors.BECAME_REPORTER\r\n        });\r\n    }\r\n\r\n    function handleHttpMetric(vo) {\r\n        if ((vo.responsecode === 0) ||      // connection failure - unknown\r\n                (vo.responsecode >= 400) || // HTTP error status code\r\n                (vo.responsecode < 100) ||  // unknown status codes\r\n                (vo.responsecode >= 600)) { // unknown status codes\r\n            report({\r\n                errorcode:          vo.responsecode || DVBErrors.CONNECTION_ERROR,\r\n                url:                vo.url,\r\n                terror:             vo.tresponse,\r\n                servicelocation:    vo._serviceLocation\r\n            });\r\n        }\r\n    }\r\n\r\n    function onMetricEvent(e) {\r\n        switch (e.metric) {\r\n        case metricsConstants.HTTP_REQUEST:\r\n            handleHttpMetric(e.value);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    function onPlaybackError(e) {\r\n        let reason = e.error ? e.error.code : 0;\r\n        let errorcode;\r\n\r\n        switch (reason) {\r\n            case MediaError.MEDIA_ERR_NETWORK:\r\n                errorcode = DVBErrors.CONNECTION_ERROR;\r\n                break;\r\n            case MediaError.MEDIA_ERR_DECODE:\r\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        report({\r\n            errorcode: errorcode\r\n        });\r\n    }\r\n\r\n    function initialise() {\r\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\r\n        eventBus.on(\r\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\r\n            onServiceLocationChanged,\r\n            instance\r\n        );\r\n        eventBus.on(Events.METRIC_ADDED, onMetricEvent, instance);\r\n        eventBus.on(Events.METRIC_UPDATED, onMetricEvent, instance);\r\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, instance);\r\n        eventBus.on(\r\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\r\n            onBecameReporter,\r\n            instance\r\n        );\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\r\n        eventBus.off(\r\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\r\n            onServiceLocationChanged,\r\n            instance\r\n        );\r\n        eventBus.off(Events.METRIC_ADDED, onMetricEvent, instance);\r\n        eventBus.off(Events.METRIC_UPDATED, onMetricEvent, instance);\r\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, instance);\r\n        eventBus.off(\r\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\r\n            onBecameReporter,\r\n            instance\r\n        );\r\n    }\r\n\r\n    instance = {\r\n        initialise,\r\n        reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(DVBErrorsTranslator); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n /**\r\n  * @ignore\r\n  */\r\nfunction HandlerHelpers() {\r\n    return {\r\n        reconstructFullMetricName: function (key, n, type) {\r\n            let mn = key;\r\n\r\n            if (n) {\r\n                mn += '(' + n;\r\n\r\n                if (type && type.length) {\r\n                    mn += ',' + type;\r\n                }\r\n\r\n                mn += ')';\r\n            }\r\n\r\n            return mn;\r\n        },\r\n\r\n        validateN: function (n_ms) {\r\n            if (!n_ms) {\r\n                throw new Error('missing n');\r\n            }\r\n\r\n            if (isNaN(n_ms)) {\r\n                throw new Error('n is NaN');\r\n            }\r\n\r\n            // n is a positive integer is defined to refer to the metric\r\n            // in which the buffer level is recorded every n ms.\r\n            if (n_ms < 0) {\r\n                throw new Error('n must be positive');\r\n            }\r\n\r\n            return n_ms;\r\n        }\r\n    };\r\n}\r\n\r\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers); /* jshint ignore:line */\r\n","import Metrics from '../vo/Metrics';\r\nimport Range from '../vo/Range';\r\nimport Reporting from '../vo/Reporting';\r\n\r\nfunction ManifestParsing (config) {\r\n    config = config || {};\r\n    let instance;\r\n    let adapter = config.adapter;\r\n    const constants = config.constants;\r\n\r\n    function getMetricsRangeStartTime(manifest, dynamic, range) {\r\n        let voPeriods,\r\n            reportingStartTime;\r\n        let presentationStartTime = 0;\r\n\r\n        if (dynamic) {\r\n            // For services with MPD@type='dynamic', the start time is\r\n            // indicated in wall clock time by adding the value of this\r\n            // attribute to the value of the MPD@availabilityStartTime\r\n            // attribute.\r\n            presentationStartTime = adapter.getAvailabilityStartTime(manifest) / 1000;\r\n        } else {\r\n            // For services with MPD@type='static', the start time is indicated\r\n            // in Media Presentation time and is relative to the PeriodStart\r\n            // time of the first Period in this MPD.\r\n            voPeriods = adapter.getRegularPeriods(manifest);\r\n\r\n            if (voPeriods.length) {\r\n                presentationStartTime = voPeriods[0].start;\r\n            }\r\n        }\r\n\r\n        // When not present, DASH Metrics collection is\r\n        // requested from the beginning of content\r\n        // consumption.\r\n        reportingStartTime = presentationStartTime;\r\n\r\n        if (range && range.hasOwnProperty(constants.START_TIME)) {\r\n            reportingStartTime += range.starttime;\r\n        }\r\n\r\n        return reportingStartTime;\r\n    }\r\n\r\n    function getMetrics(manifest) {\r\n        let metrics = [];\r\n\r\n        if (manifest && manifest.Metrics_asArray) {\r\n            manifest.Metrics_asArray.forEach(metric => {\r\n                var metricEntry = new Metrics();\r\n                var isDynamic = adapter.getIsDynamic(manifest);\r\n\r\n                if (metric.hasOwnProperty('metrics')) {\r\n                    metricEntry.metrics = metric.metrics;\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n                if (metric.Range_asArray) {\r\n                    metric.Range_asArray.forEach(range => {\r\n                        var rangeEntry = new Range();\r\n\r\n                        rangeEntry.starttime =\r\n                            getMetricsRangeStartTime(manifest, isDynamic, range);\r\n\r\n                        if (range.hasOwnProperty('duration')) {\r\n                            rangeEntry.duration = range.duration;\r\n                        } else {\r\n                            // if not present, the value is identical to the\r\n                            // Media Presentation duration.\r\n                            rangeEntry.duration = adapter.getDuration(manifest);\r\n                        }\r\n\r\n                        rangeEntry._useWallClockTime = isDynamic;\r\n\r\n                        metricEntry.Range.push(rangeEntry);\r\n                    });\r\n                }\r\n\r\n                if (metric.Reporting_asArray) {\r\n                    metric.Reporting_asArray.forEach(reporting => {\r\n                        var reportingEntry = new Reporting();\r\n\r\n                        if (reporting.hasOwnProperty(constants.SCHEME_ID_URI)) {\r\n                            reportingEntry.schemeIdUri = reporting.schemeIdUri;\r\n                        } else {\r\n                            // Invalid Reporting. schemeIdUri must be set. Ignore.\r\n                            return;\r\n                        }\r\n\r\n                        if (reporting.hasOwnProperty('value')) {\r\n                            reportingEntry.value = reporting.value;\r\n                        }\r\n\r\n                        if (reporting.hasOwnProperty(constants.DVB_REPORTING_URL)) {\r\n                            reportingEntry.dvb_reportingUrl = reporting[constants.DVB_REPORTING_URL];\r\n                        }\r\n\r\n                        if (reporting.hasOwnProperty(constants.DVB_PROBABILITY)) {\r\n                            reportingEntry.dvb_probability = reporting[constants.DVB_PROBABILITY];\r\n                        }\r\n\r\n                        metricEntry.Reporting.push(reportingEntry);\r\n                    });\r\n                } else {\r\n                    // Invalid Metrics. At least one reporting must be present. Ignore\r\n                    return;\r\n                }\r\n\r\n                metrics.push(metricEntry);\r\n            });\r\n        }\r\n\r\n        return metrics;\r\n    }\r\n\r\n    instance = {\r\n        getMetrics: getMetrics\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nManifestParsing.__dashjs_factory_name = 'ManifestParsing';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ManifestParsing); /* jshint ignore:line */","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction MetricSerialiser() {\r\n\r\n    // For each entry in the top level list within the metric (in the case\r\n    // of the DVBErrors metric each entry corresponds to an \"error event\"\r\n    // described in clause 10.8.4) the Player shall:\r\n    function serialise(metric) {\r\n        let pairs = [];\r\n        let obj = [];\r\n        let key,\r\n            value;\r\n\r\n        // Take each (key, value) pair from the metric entry and create a\r\n        // string consisting of the name of the key, followed by an equals\r\n        // ('=') character, followed by the string representation of the\r\n        // value. The string representation of the value is created based\r\n        // on the type of the value following the instructions in Table 22.\r\n        for (key in metric) {\r\n            if (metric.hasOwnProperty(key) && (key.indexOf('_') !== 0)) {\r\n                value = metric[key];\r\n\r\n                // we want to ensure that keys still end up in the report\r\n                // even if there is no value\r\n                if ((value === undefined) || (value === null)) {\r\n                    value = '';\r\n                }\r\n\r\n                // DVB A168 10.12.4 Table 22\r\n                if (Array.isArray(value)) {\r\n                    // if trace or similar is null, do not include in output\r\n                    if (!value.length) {\r\n                        continue;\r\n                    }\r\n\r\n                    obj = [];\r\n\r\n                    value.forEach(function (v) {\r\n                        let isBuiltIn = Object.prototype.toString.call(v).slice(8, -1) !== 'Object';\r\n\r\n                        obj.push(isBuiltIn ? v : serialise(v));\r\n                    });\r\n\r\n                    value = obj.map(encodeURIComponent).join(',');\r\n                } else if (typeof value === 'string') {\r\n                    value = encodeURIComponent(value);\r\n                } else if (value instanceof Date) {\r\n                    value = value.toISOString();\r\n                } else if (typeof value === 'number') {\r\n                    value = Math.round(value);\r\n                }\r\n\r\n                pairs.push(key + '=' + value);\r\n            }\r\n        }\r\n\r\n        // Concatenate the strings created in the previous step with an\r\n        // ampersand ('&') character between each one.\r\n        return pairs.join('&');\r\n    }\r\n\r\n    return {\r\n        serialise: serialise\r\n    };\r\n}\r\n\r\nMetricSerialiser.__dashjs_factory_name = 'MetricSerialiser';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricSerialiser); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n /**\r\n  * @ignore\r\n  */\r\nfunction RNG() {\r\n\r\n    // check whether secure random numbers are available. if not, revert to\r\n    // using Math.random\r\n    let crypto = window.crypto || window.msCrypto;\r\n\r\n    // could just as easily use any other array type by changing line below\r\n    let ArrayType = Uint32Array;\r\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\r\n\r\n    // currently there is only one client for this code, and that only uses\r\n    // a single random number per initialisation. may want to increase this\r\n    // number if more consumers in the future\r\n    let NUM_RANDOM_NUMBERS = 10;\r\n\r\n    let randomNumbers,\r\n        index,\r\n        instance;\r\n\r\n    function initialise() {\r\n        if (crypto) {\r\n            if (!randomNumbers) {\r\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\r\n            }\r\n            crypto.getRandomValues(randomNumbers);\r\n            index = 0;\r\n        }\r\n    }\r\n\r\n    function rand(min, max) {\r\n        let r;\r\n\r\n        if (!min) {\r\n            min = 0;\r\n        }\r\n\r\n        if (!max) {\r\n            max = 1;\r\n        }\r\n\r\n        if (crypto) {\r\n            if (index === randomNumbers.length) {\r\n                initialise();\r\n            }\r\n\r\n            r = randomNumbers[index] / MAX_VALUE;\r\n            index += 1;\r\n        } else {\r\n            r = Math.random();\r\n        }\r\n\r\n        return (r * (max - min)) + min;\r\n    }\r\n\r\n    instance = {\r\n        random: rand\r\n    };\r\n\r\n    initialise();\r\n\r\n    return instance;\r\n}\r\n\r\nRNG.__dashjs_factory_name = 'RNG';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(RNG); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DVBErrors {\r\n    constructor() {\r\n        this.mpdurl = null;\r\n        // String - Absolute URL from which the MPD was originally\r\n        // retrieved (MPD updates will not change this value).\r\n\r\n        this.errorcode = null;\r\n        // String - The value of errorcode depends upon the type\r\n        // of error being reported. For an error listed in the\r\n        // ErrorType column below the value is as described in the\r\n        // Value column.\r\n        //\r\n        // ErrorType                                            Value\r\n        // ---------                                            -----\r\n        // HTTP error status code                               HTTP status code\r\n        // Unknown HTTP status code                             HTTP status code\r\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\r\n        // DNS resolution failed                                \"C00\"\r\n        // Host unreachable                                     \"C01\"\r\n        // Connection refused                                   \"C02\"\r\n        // Connection error – Not otherwise specified           \"C03\"\r\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\r\n        // Corrupt media – Not otherwise specified              \"M01\"\r\n        // Changing Base URL in use due to errors               \"F00\"\r\n        // Becoming an error reporting Player                   \"S00\"\r\n\r\n        this.terror = null;\r\n        // Real-Time - Date and time at which error occurred in UTC,\r\n        // formatted as a combined date and time according to ISO 8601.\r\n\r\n        this.url = null;\r\n        // String - Absolute URL from which data was being requested\r\n        // when this error occurred. If the error report is in relation\r\n        // to corrupt media or changing BaseURL, this may be a null\r\n        // string if the URL from which the media was obtained or\r\n        // which led to the change of BaseURL is no longer known.\r\n\r\n        this.ipaddress = null;\r\n        // String - IP Address which the host name in \"url\" resolved to.\r\n        // If the error report is in relation to corrupt media or\r\n        // changing BaseURL, this may be a null string if the URL\r\n        // from which the media was obtained or which led to the\r\n        // change of BaseURL is no longer known.\r\n\r\n        this.servicelocation = null;\r\n        // String - The value of the serviceLocation field in the\r\n        // BaseURL being used. In the event of this report indicating\r\n        // a change of BaseURL this is the value from the BaseURL\r\n        // being moved from.\r\n    }\r\n}\r\n\r\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\r\nDVBErrors.DNS_RESOLUTION_FAILED =        'C00';\r\nDVBErrors.HOST_UNREACHABLE =             'C01';\r\nDVBErrors.CONNECTION_REFUSED =           'C02';\r\nDVBErrors.CONNECTION_ERROR =             'C03';\r\nDVBErrors.CORRUPT_MEDIA_ISOBMFF =        'M00';\r\nDVBErrors.CORRUPT_MEDIA_OTHER =          'M01';\r\nDVBErrors.BASE_URL_CHANGED =             'F00';\r\nDVBErrors.BECAME_REPORTER =              'S00';\r\n\r\nexport default DVBErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Metrics {\r\n    constructor() {\r\n\r\n        this.metrics = '';\r\n        this.Range = [];\r\n        this.Reporting = [];\r\n    }\r\n}\r\n\r\nexport default Metrics;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Range {\r\n    constructor() {\r\n\r\n        // as defined in ISO23009-1\r\n        this.starttime = 0;\r\n        this.duration = Infinity;\r\n\r\n        // for internal use\r\n        this._useWallClockTime = false;\r\n    }\r\n}\r\n\r\nexport default Range;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\n// TS 103 285 Clause 10.12.3.3\r\nconst DEFAULT_DVB_PROBABILITY = 1000;\r\n\r\nclass Reporting {\r\n    constructor() {\r\n\r\n        this.schemeIdUri = '';\r\n        this.value = '';\r\n\r\n        // DVB Extensions\r\n        this.dvb_reportingUrl = '';\r\n        this.dvb_probability = DEFAULT_DVB_PROBABILITY;\r\n    }\r\n}\r\n\r\nexport default Reporting;\r\n","/**\r\n* The copyright in this software is being made available under the BSD License,\r\n* included below. This software may be subject to other third party and contributor\r\n* rights, including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2013, Dash Industry Forum.\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification,\r\n* are permitted provided that the following conditions are met:\r\n*  * Redistributions of source code must retain the above copyright notice, this\r\n*  list of conditions and the following disclaimer.\r\n*  * Redistributions in binary form must reproduce the above copyright notice,\r\n*  this list of conditions and the following disclaimer in the documentation and/or\r\n*  other materials provided with the distribution.\r\n*  * Neither the name of Dash Industry Forum nor the names of its\r\n*  contributors may be used to endorse or promote products derived from this software\r\n*  without specific prior written permission.\r\n*\r\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n*  POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport { checkInteger } from '../utils/SupervisorTools';\r\n\r\nfunction CustomTimeRanges(/*config*/) {\r\n    let customTimeRangeArray = [];\r\n    let length = 0;\r\n\r\n    function add(start, end) {\r\n        let i = 0;\r\n\r\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\r\n\r\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\r\n\r\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\r\n            if (this.mergeRanges(i,i + 1)) {\r\n                i--;\r\n            }\r\n        }\r\n        this.length = this.customTimeRangeArray.length;\r\n    }\r\n\r\n    function clear() {\r\n        this.customTimeRangeArray = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    function remove(start, end) {\r\n        for (let i = 0; i < this.customTimeRangeArray.length; i++) {\r\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\r\n                //      |--------------Range i-------|\r\n                //|---------------Range to remove ---------------|\r\n                //    or\r\n                //|--------------Range i-------|\r\n                //|--------------Range to remove ---------------|\r\n                //    or\r\n                //                 |--------------Range i-------|\r\n                //|--------------Range to remove ---------------|\r\n                this.customTimeRangeArray.splice(i,1);\r\n                i--;\r\n\r\n            } else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\r\n                //|-----------------Range i----------------|\r\n                //        |-------Range to remove -----|\r\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\r\n                this.customTimeRangeArray[i].end = start;\r\n                break;\r\n            } else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\r\n                //|-----------Range i----------|\r\n                //                    |---------Range to remove --------|\r\n                //    or\r\n                //|-----------------Range i----------------|\r\n                //            |-------Range to remove -----|\r\n                this.customTimeRangeArray[i].end = start;\r\n            } else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\r\n                //                     |-----------Range i----------|\r\n                //|---------Range to remove --------|\r\n                //            or\r\n                //|-----------------Range i----------------|\r\n                //|-------Range to remove -----|\r\n                this.customTimeRangeArray[i].start = end;\r\n            }\r\n        }\r\n\r\n        this.length = this.customTimeRangeArray.length;\r\n    }\r\n\r\n    function mergeRanges(rangeIndex1, rangeIndex2) {\r\n        let range1 = this.customTimeRangeArray[rangeIndex1];\r\n        let range2 = this.customTimeRangeArray[rangeIndex2];\r\n\r\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\r\n            //|-----------Range1----------|\r\n            //                    |-----------Range2----------|\r\n            range1.end = range2.end;\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n\r\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\r\n            //                |-----------Range1----------|\r\n            //|-----------Range2----------|\r\n            range1.start = range2.start;\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\r\n            //      |--------Range1-------|\r\n            //|---------------Range2--------------|\r\n            this.customTimeRangeArray.splice(rangeIndex1,1);\r\n            return true;\r\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\r\n            //|-----------------Range1--------------|\r\n            //        |-----------Range2----------|\r\n            this.customTimeRangeArray.splice(rangeIndex2,1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function start(index) {\r\n        checkInteger(index);\r\n\r\n        if (index >= this.customTimeRangeArray.length || index < 0) {\r\n            return NaN;\r\n        }\r\n\r\n        return this.customTimeRangeArray[index].start;\r\n    }\r\n\r\n    function end(index) {\r\n        checkInteger(index);\r\n\r\n        if (index >= this.customTimeRangeArray.length || index < 0) {\r\n            return NaN;\r\n        }\r\n\r\n        return this.customTimeRangeArray[index].end;\r\n    }\r\n\r\n    return {\r\n        customTimeRangeArray: customTimeRangeArray,\r\n        length: length,\r\n        add: add,\r\n        clear: clear,\r\n        remove: remove,\r\n        mergeRanges: mergeRanges,\r\n        start: start,\r\n        end: end\r\n    };\r\n}\r\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\r\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../constants/Constants';\r\n\r\nexport function checkParameterType(parameter, type) {\r\n    if (typeof parameter !== type) {\r\n        throw Constants.BAD_ARGUMENT_ERROR;\r\n    }\r\n}\r\n\r\nexport function checkInteger(parameter) {\r\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\r\n\r\n    if (!isInt) {\r\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\r\n    }\r\n}\r\n\r\nexport function checkRange(parameter, min, max) {\r\n    if (parameter < min || parameter > max) {\r\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\r\n    }\r\n}\r\n\r\nexport function checkIsVideoOrAudioType(type) {\r\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\r\n        throw Constants.BAD_ARGUMENT_ERROR;\r\n    }\r\n}"],"sourceRoot":""}